# NOTE: You have to use single-quoted strings in TOML for regular expressions.
# It's the equivalent of r-strings in Python.  Multiline strings are treated as
# verbose regular expressions by Black.  Use [ ] to denote a significant space
# character.

[build-system]
build-backend = "setuptools.build_meta"
requires = [
  "setuptools>=61.2",
]

[project]
name = "django-fsspec"
description = "Support for many storage backends in Django through fsspec"
license = { text = "BSD-3-Clause" }
authors = [{ name = "Bastiaan Roos", email = "bastiaan.roos@roosgeo.nl" }]
requires-python = ">=3.11"
classifiers = [
  "Development Status :: 2 - Pre-Alpha",
  "Environment :: Web Environment",
  "Framework :: Django",
  "Framework :: Django :: 5.0",
  "Framework :: Django :: 5.1",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: BSD License",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
]
dynamic = [
  "readme",
  "version",
]
dependencies = [
  "Django>=5.0",
  "fsspec>=2025.2.0",
  "s3fs>=2025.2.0"
]
[project.optional-dependencies]
#s3 = [
#  "s3fs>=2025.2.0"
#]

[project.urls]
Homepage = "https://github.com/GetThePointGit/django-fsspec"

[tool.setuptools]
zip-safe = false
packages = [
  "django_fsspec"
]
include-package-data = false

[tool.setuptools.dynamic]
readme = { file = ["README.md"] }
version = { attr = "django_fsspec.__version__" }

[tool.ruff]
# Allow lines to be as long as 120.
line-length = 120

lint.select = [
  "AIR", # Airflow
  "ASYNC", # flake8-async
  "B", # flake8-bugbear
  "C4", # flake8-comprehensions
  "C90", # McCabe cyclomatic complexity
  "DJ", # flake8-django
  "E", # pycodestyle
  "EXE", # flake8-executable
  "F", # Pyflakes
  "FLY", # flynt
  "G", # flake8-logging-format
  "I", # isort
  "ICN", # flake8-import-conventions
  "INP", # flake8-no-pep420
  "INT", # flake8-gettext
  "ISC", # flake8-implicit-str-concat
  "NPY", # NumPy-specific rules
  "PD", # pandas-vet
  "PERF", # Perflint
  "PGH", # pygrep-hooks
  "PIE", # flake8-pie
  "PL", # Pylint
  "PYI", # flake8-pyi
  "RUF", # Ruff-specific rules
  "SLOT", # flake8-slots
  "T10", # flake8-debugger
  "T20", # flake8-print
  "TCH", # flake8-type-checking
  "TID", # flake8-tidy-imports
  "W", # pycodestyle
  "YTT", # flake8-2020
  # "A",    # flake8-builtins
  # "ANN",  # flake8-annotations
  # "ARG",  # flake8-unused-arguments
  # "BLE",  # flake8-blind-except
  # "COM",  # flake8-commas
  # "D",    # pydocstyle
  # "DTZ",  # flake8-datetimez
  # "EM",   # flake8-errmsg
  # "ERA",  # eradicate
  # "FA",   # flake8-future-annotations
  # "FBT",  # flake8-boolean-trap
  # "FIX",  # flake8-fixme
  # "N",    # pep8-naming
  # "PT",   # flake8-pytest-style
  # "PTH",  # flake8-use-pathlib
  # "Q",    # flake8-quotes
  # "RET",  # flake8-return
  # "RSE",  # flake8-raise
  # "S",    # flake8-bandit
  # "SIM",  # flake8-simplify
  # "SLF",  # flake8-self
  # "TD",   # flake8-todos
  # "TRY",  # tryceratops
  # "UP",   # pyupgrade
]
lint.ignore = [
  "B028",
  "B904",
  "PGH004",
]
target-version = "py312"

[tool.ruff.lint.isort]
force-single-line = true
known-first-party = ["django_fsspec"]

[tool.ruff.lint.pylint]
allow-magic-value-types = ["int", "str"]